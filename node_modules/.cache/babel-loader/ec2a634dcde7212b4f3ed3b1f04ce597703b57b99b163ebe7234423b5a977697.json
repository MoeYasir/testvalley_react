{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedyasir/assessment/src/collections/Collection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"../main_shortcuts/shortcut.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shortcut = () => {\n  _s();\n  const [data, setData] = useState(null); // State to store the fetched data\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\"https://api.testvalley.kr/collections\", {\n          params: {\n            type: \"SINGLE\",\n            viewType: \"TILE\"\n          }\n        });\n        setData(res.data.items);\n        console.log(res.data.items.items.publication.media.uri);\n        // Update state with fetched data items\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData(); // Call fetchData function when component mounts\n  }, []); // Empty dependency array ensures useEffect runs only once when component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: data ? data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"item-title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"item-subtitle\",\n          children: item.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-container\",\n        children: item.items.map((mediaItem, mediaIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-item\",\n          children: mediaItem.publication && mediaItem.publication.media && mediaItem.publication.media.map((media, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: media.uri,\n            alt: \"\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }, this))\n        }, mediaIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Shortcut, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Shortcut;\nexport default Shortcut;\nvar _c;\n$RefreshReg$(_c, \"Shortcut\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Shortcut","_s","data","setData","fetchData","res","get","params","type","viewType","items","console","log","publication","media","uri","error","className","children","map","item","index","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","mediaItem","mediaIndex","src","alt","_c","$RefreshReg$"],"sources":["/Users/mohammedyasir/assessment/src/collections/Collection.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"../main_shortcuts/shortcut.scss\";\n\nconst Shortcut = () => {\n  const [data, setData] = useState(null); // State to store the fetched data\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\"https://api.testvalley.kr/collections\", {\n          params: {\n            type: \"SINGLE\",\n            viewType: \"TILE\"\n          }\n        });\n      \n        setData(res.data.items); \n        console.log(res.data.items.items.publication.media.uri)\n        // Update state with fetched data items\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData(); // Call fetchData function when component mounts\n  }, []); // Empty dependency array ensures useEffect runs only once when component mounts\n\n  return (\n    <div className='container'>\n      {data ? (\n        data.map((item, index) => (\n          <div key={index} className='item'>\n            <div className=\"item-content\">\n              {/* Render item title and subtitle */}\n              <p className='item-title'>{item.title}</p>\n              <p className='item-subtitle'>{item.subtitle}</p>\n            </div>\n            {/* Loop through media and render images */}\n            <div className=\"media-container\">\n              {item.items.map((mediaItem, mediaIndex) => (\n                <div key={mediaIndex} className=\"media-item\">\n                  {/* Accessing media array inside publication */}\n                  {mediaItem.publication && mediaItem.publication.media && (\n                    mediaItem.publication.media.map((media, index) => (\n                      <img key={index} src={media.uri} alt='' />\n                    ))\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        ))\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Shortcut;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}